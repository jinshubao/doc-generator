buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
        //mavenLocal()
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE'
        classpath 'io.github.swagger2markup:swagger2markup-spring-restdocs-ext:1.2.0'
        classpath 'io.github.swagger2markup:swagger2markup-gradle-plugin:1.2.0'
        classpath "org.ajoberstar:gradle-git:1.5.1"
    }
}

group 'shangying'
version '2.0'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'io.github.swagger2markup'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.ajoberstar.github-pages'


ext {
    asciiDocOutputDir = file("${buildDir}/asciidoc/generated")
    swaggerOutputDir = file("${buildDir}/swagger")
    filename = "swagger.json"
//    swaggerHost = "http://10.52.2.170:7002/v2/api-docs?group=%E5%86%85%E9%83%A8%E6%8E%A5%E5%8F%A3"
    swaggerHost = "http://10.52.2.170:7002/v2/api-docs?group=%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3"
}

task generateJsonFile << {
    def json = file(swaggerOutputDir)
    if (!json.exists()) {
        json.mkdirs()
    }
    json = file("${swaggerOutputDir}/${filename}")
    "${swaggerHost}".toURL().eachLine("UTF-8") {
        json.append(it, "UTF-8")
    }
}

convertSwagger2markup {

    dependsOn generateJsonFile

    swaggerInput "${swaggerOutputDir}/${filename}"
    outputDir asciiDocOutputDir
    config = [
            'swagger2markup.outputLanguage'          : 'ZH',
            'swagger2markup.markupLanguage'          : 'ASCIIDOC',
            'swagger2markup.pathsGroupedBy'          : 'TAGS',
            'swagger2markup.generatedExamplesEnabled': 'true',
            'swagger2markup.flatBodyEnabled'         : 'true']
}

asciidoctor {
    dependsOn convertSwagger2markup
    sources {
        include 'index.adoc'
    }
    backends = ['html5']
    attributes = [
            doctype             : 'book',
            toc                 : 'left',
            toclevels           : '3',
            numbered            : '',
            sectlinks           : '',
            sectanchors         : '',
            hardbreaks          : '',
            generated           : asciiDocOutputDir,
            'source-highlighter': 'coderay',
            'toc-title'         : '目录'
    ]
}
